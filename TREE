# DSA
*Tree Data Structure
1.Non-Linear Data structure.
2.A tree is a nonlinear hierarchical data structure that consists of nodes connected by edges(connects two nodes).
3.A tree can be empty with no nodes or a tree is a structure consisting of one node called the root and zero or one or more subtrees.

Q.Why Tree Data Structure?
-Other data structures such as arrays, linked list, stack, and queue are linear data structures that store data sequentially. 
In order to perform any operation in a linear data structure, the time complexity increases with the increase in the data size. 
But, it is not acceptable in today's computational world.

-Different tree data structures allow quicker and easier access to the data as it is a non-linear data structure.

Q.Define and understand various terminologies wrt tree i.e height, depth, rootnode, leaf node, level etc

Terminologies in Tree 
1.Node
A node is an entity that contains a key or value and pointers to its child nodes.

2.leaf node: The last nodes of each path are called leaf nodes or external nodes that do not contain a link/pointer to child nodes.

The node having at least a child node is called an internal node.

3.Edge
It is the link between any two nodes.

4.Root
It is the topmost node of a tree.

5.Height of a Node
The height of a node is the number of edges from the node to the deepest leaf (ie. the longest path from the node to a leaf node).

6.depth
The depth of the tree is the length of the path from the root of the tree to to leaf node

7.level
A level is the number of parent nodes corresponding to a given a node of the tree




